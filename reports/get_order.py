from bd.model import Clients, Documents
from arrow import utcnow, get
from bd.model import Session, Clients
from pprint import pprint

import logging

logger = logging.getLogger(__name__)


name = "üì¶ Get Order ‚û°Ô∏è"
desc = "–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω–µ –∏–∑ xls –≤ –±–∞–∑—É"
mime = "text"


class OrderInput:
    name = "–§–∞–π–ª"
    desc = "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞"
    type = "MESSAGE"


def get_inputs(session: Session):
    return {"order": OrderInput}


def generate(session: Session):
    params = session.params["inputs"]["0"]

    order_ = int(params["order"])
    # pprint(type(order_))
    try:
        logger.info("–ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞")

        document = Documents.objects(order_list__in=[order_])
        report_date = []
        for doc in document:
            dic_doc: dict = doc["order"]
            dic_doc.update(
                {
                    "closeDate": doc["closeDate"][:10],
                    "–°–æ—Ç—Ä—É–¥–Ω–∏–∫": doc["–°–æ—Ç—Ä—É–¥–Ω–∏–∫"],
                    "–°—É–º–º–∞": doc["–°—É–º–º–∞"],
                    "%": doc["%"],
                    "–ò—Ç–æ–≥%": doc["–ò—Ç–æ–≥%"],
                    "–û–∫–ª–∞–¥": doc["–û–∫–ª–∞–¥"],
                    "–û—Ç–ø—É—Å–∫–Ω—ã–µ": doc["–û—Ç–ø—É—Å–∫–Ω—ã–µ"],
                    "–û—Ñ—á–∞—Å—Ç—å": doc["–û—Ñ—á–∞—Å—Ç—å"],
                    "–î–æ–ª–≥": doc["–î–æ–ª–≥"],
                    "–¥–æ–ø –ø—Ä–µ–º–∏—è": doc["–¥–æ–ø –ø—Ä–µ–º–∏—è"],
                    "–ò—Ç–æ–≥": doc["–ò—Ç–æ–≥"],
                }
            )
            report_date.append(dic_doc)
        logger.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        logger.debug(report_date)
        return report_date
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
